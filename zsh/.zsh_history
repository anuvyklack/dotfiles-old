./build/bin/nvim --version | grep ^Build
$TERM
echo $LANG
make -C build check-po-$LANG
make -C build update-po-ru
make -C build check-po-ru
11;rgb:2828/2c2c/3434
ninja -C build update-po-ru
ranger-cd
echo $EDITOR
vim ginit.vim
vim plugins.vim
select-editor
man select-editor
man 1 showkey
sudo apt install showkey
sudo apt-get install showkey
sudo apt install kbd
showkey -
showkey
showkey -s
sudo showkey -s
man showkey
man dumpkeys
source .zshrc
echo $ZSH_CUSTOM
xsel
man xsel
man xclip
powershell.exe
uname
echo $PATH
pengwin-help
readfile -f win32yank.exe
man rm
sudo rm win32yank.exe
sudo ln -s "/mnt/c/tools/win32yank.exe" "/usr/local/bin/win32yank.exe"
win32yank.exe
win32yank.exe -o
/mnt/c/tools/win32yank.exe
readlink -f win32yank.exe
sudo ln -s "/mnt/c/tools/win32yank.exe" "/usr/local/bin/win32yank"
win32yank
vim .zshrc
ls -h
ls -a
vim init.vim
conda
sudo apt update
apt list --upgradable
sudo apt upgrade
sudo apt autoremove
sudo apt full-upgrade
apt -c
apt -s
apt search rager
apt search ranger
apt list --installed
apt list --installed | grep ranger
man dpkg
dpkg -s ranger
dpkg -s zsh
dpkg -s zsh | grep status
dpkg -s zsh | grep Status
dpkg -s ruby | grep Status
dpkg -s ruby
apt search ruby
dpkg-query --show --showformat='$(Status)' nano
dpkg-query --show --showformat='$(Status)' ranger
dpkg-query --show --showformat="$(Status)" ranger
dpkg-query --show --showformat="${Status}" ranger
dpkg-queru -s ranger
dpkg-query -s ranger
dpkg-query --show --showformat='${Status}' ranger
man grep
dpkg-query --show --showformat='${Status}' ranger | grep --count "ok installed"
man -eq
man eq
apt search zsh-autosuggestions
zsh-autosuggestions
dpkg-query -W zsh-autosuggestions
man dpkg-query
dpkg-query -s zsh-autosuggestions
zsh
atom
sudo apt remove zsh-autosuggestions
sudo apt install zsh-autosuggestions
man apt
sudo apt install zsh-syntax-highlighting
vim setup_environment.sh
vim zsh_help_file.txt
google github
ls -A --color
man ls
google vi-mode
vi-mode
vim zsh_help_file.txt .zshrc
which nvim
xt
vim .zshrc zsh_help_file.txt
ls -l --color=auto
google zsh ls onedark dir not visible
echo "LS_COLORS=$LS_COLORS:'ow=37;42:'" >> ~/.zshrc
zsh -f
echo $LS_COLORS
echo $LS_COLORS >> ~/.zshrc
google –∫–µ—Ä–∞–∏–º—É´
google –∂–µ–Ω—Å–∫–∏–π –ø–ª—ÉØ–∂–Ω—É´–π –≤–æ–ª–µ–π–±–æ–ª
man dir
man dir_colors
man tmux
man ln
ln -sv /mnt/d/artyu/OneDrive/Software Software
ln -sv /mnt/d/artyu artyu
exit u
sudo rm FastCopy.exe
sudo ln /mnt/c/scoop/apps/fastcopy/current/FastCopy.exe FastCopy.exe
sudo
sudo ln -sv /mnt/c/scoop/apps/fastcopy/current/FastCopy.exe FastCopy.exe
sudo ln -v /mnt/c/scoop/apps/fastcopy/current/FastCopy.exe FastCopy.exe
sudo rm /mnt/c/Program\ Files/Far\ Manager/FastCopy.exe
sudo ln -v /mnt/c/scoop/apps/fastcopy/current/FastCopy.exe /mnt/c/Program\ Files/Far\ Manager/FastCopy.exe
youtube-sl
youtube-dl
apt search youtube-dl
fish
git clone https://github.com/gpakosz/.tmux.git
ln -s -f .tmux/.tmux.conf
cp .tmux/.tmux.conf.local .
tmux
vim -d /mnt/c/Users/artyu/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/profiles.json /mnt/c/Users/artyu/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/old_profiles.json
—É£—Éß—É®–µ
exie
t
man nvi
man nvim
google ranger easy motion
git clone https://github.com/alexanderjeurissen/ranger_devicons ~/.config/ranger/plugins/ranger_devicons
ln -sv ~/dotfiles/ranger/ranger-autojump/autojump.py ~/.con
ln -sv ~/dotfiles/ranger/ranger-autojump/autojump.py ~/.config/ranger/plugins/autojump.py
apt search autojump
rm autojump.py
google zsh man colorer
vim ~/.zshrc ~/zsh_help_file.txt
google man table of content
man ranger | grep '^[A-Z]'
man ranger
man ranger | grep '^\t*?[A-Z]'
man ranger | grep '^\t?[A-Z]'
man ranger | grep '^\t[A-Z]'
echo $OSTYPE
echo $SHELL
zsh /usr/share/zsh/functions/Newuser/zsh-newuser-install -f
cat
alias
cd Downloads
extract nvim-linux64.tar.gz
extract neovim-nightly.zip
cd neovim-nightly
cd ..
make CMAKE_BUILD_TYPE=Release
sudo make install
setunv
man set
set
history -10
who
which
vim ~/–Éº–æ–∏_–∑–∞–º–µ—Ç–∫–∏/neovim\ –º–æ–∏\ –∑–∞–º–µ—Ç–∫–∏.txt
git clone https://github.com/tpope/vim-markdown/blob/master/syntax/markdown.vim
git clone https://github.com/tpope/vim-markdown
vim diexit
vim diff markdown_in_neovim.vim vim-markdown/syntax/markdown.vim
vim -diff markdown_in_neovim.vim vim-markdown/syntax/markdown.vim
Projects/Neovim
vim -d markdown_in_neovim.vim vim-markdown/syntax/markdown.vim
exi
echo $PAGER
echo -e "\e[3mItalic"
echo $TERM
echo -e "\e[3m is this italics? \e[23m"
echo -e 'Normal, \x1b[1mbold\x1b[22m, \x1b[3mitalic\x1b[23m, \x1b[1;3mbold italic\x1b[22;23m'
man 2 echo
man 3 echo
man 4 echo
man 5 echo
man 6  echo
man 7 echo
man 8 echo
man 9 echo
vi
source range
apt
ln -sv ~/Software/vimwiki ~/
nviim
tzdata
pengwin-setup
mv .zshrc .zshrc_old
echo $PARINIT
autoload -Uz compinstall
compinstall
apt search par
apt-get search par
apt search par | grep par
apt search par | grep 'par'
sudo apt install par
par
par help
nvi
OB
ls -f
ld -F
ls -F
ls -Ff
ls -A
ls -ial
less
less --help
ls --color=tty
less ~/.zshrc
nvin
apt search neovim
dotfiles
setopt
~/.config/nvim/plugged/wiki.vim
vim ./autoload/wiki/page.vim
source ran
grep -r TOC .
bindkey
zstyle
zstyle -L
vim -c <plug>(wiki-index)
vim -c
vim -c I
vm
sudo apt install fzf
rnger
man fzf
less ~/wiki/neovim.wiki
vim **
man zsh
vim ~/dotfiles/zsh/{.zshrc,.zshrc_old}
Software
pwd -p
pwd -P
whereis zsh
whereis zsh | column
apt search locate
whereis prompt init
whereis promptinit
locate
locate --help
updatedb
locate zsh
pandoc
apt search pandoc
sudo apt remove locate
crone
cron
which cron
sudo apt remove mlocate
sudo apt install locate
sudo updatedb
sudo apt install mlocate
etc/cron
source ranger
mlocate
./mlocate
/etc/cron.daily
sudo ./mlocate
locate promptinit
mlocate promptinit | cd
cd $(mlocate promptinit)
/u/s/z/f/P
/usr/share/zsh/functions/Prompts
ls | column
ls -l > ~/dotfiles/zsh/zshthemes
cd ~/.config/nvim/plugged/vim-man
mlocate promptinit
cd ~/.config/ranger/plugins
prompt -l
prompt -p
history | fzf
history -a
history -h
history --help
bash
/usr/share/man
man1
whereis fzf
mandb
man -k password
man par
man -H less
man history
man echo
man exec
man nroff
man man
man less
man more
man most
man tzdata
man column
man zshcontrib
man who
vim ~/dotfiles/nvim/syntax
vim ~/dotfiles/nvim/after
vw
locate fzf
fzf
/usr/share/doc/fzf
find . | fzf
echo $LINES
vim $(find * -type f -not -path '*/.git/*' | fzf --preview="head -$LINES {}")
man zshoptions
sudo cron
locate zsh_history
git remote -vv
git remote
git remote -v
git branch -vv
git fetch origin
git log --decorate --all --oneline --graph
git checkout -b statusline
git commit -a
git push -u myfork statusline
vim ~/.zsh_history ~/dotfiles/zsh/.zsh_history
mlocate nvimdiff
git graph
echo $LOCAL
vim ~/.gitconfig
mlocate vimdiff
man vimdiff
cd /usr/lib/git-core/mergetools
cd ~
git dif
git difftool
git config --global -e
locale
sudo explorer.exe
explorer.exe
git ls-tree
git ls-tree -d
vim ~/.config/nvim/plugins.vim
fc -w
fc -W
less ~/.zsh_history
cp ~/.zsh_history ~/dotfiles/zsh/.zsh_history -fvH
man cp
cp ~/.zsh_history ~/dotfiles/zsh/.zsh_history -fv
cp -fv ~/.zsh_history ~/dotfiles/zsh/.zsh_history
less ~/dotfiles/zsh/.zsh_history
apt search fzf
apt search ag | ag
apt search ag | rg ag
apt search silver
sudo apt install silversearcher-ag
ag man
rg man
ag --help
rg --help
man rg
man ag
apt search ag | fzf
git config --global --list
cd ~./dotfiles
git commit --amend
apt search lsd | rg lsd
cd program_files/
curl https://github.com/Peltoche/lsd/releases/download/0.16.0/lsd_0.16.0_amd64.deb
wget https://github.com/Peltoche/lsd/releases/download/0.16.0/lsd_0.16.0_amd64.deb
sudo dpkg -i lsd_0.16.0_amd64.deb
ls -l
man lsd
lsd -h
lsd -lh
lsd -1
lsd --group-dirs=first
lsd --group-dirs=first -l
lsd --group-dirs=first -lh
lsd --group-dirs=first -la
lsd --group-dirs=first -R
lsd --group-dirs=first -lR1
lsd --group-dirs=first --tree
lsd --group-dirs=first -V
exa -G
exa -lG
lsd --group-dirs=first --blocks=size,date,name
lsd --group-dirs=first --blocks=size,date,name -l
lsd --group-dirs=first --blocks=size,date,name --date=relative
lsd --group-dirs=first --blocks=size,date,name --date=relative --total-size
lsd --group-dirs=first --blocks=size,date,name --date=relative --total-size -l
lsd --group-dirs=first --blocks=size,date,name --date=relative -l
lsd -l
lsd --color=always
lsd --color=never
lsd -A
cat .lesshst
ls --tree
apt search bat | rg bat
sudo apt install bat
cd ~/dotfiles
apt search bat*extras
apt search 'bat*extras'
apt search bat extras
cat install.sh
cat init.vim
less init.vim
bat init.vim
cd ~/program_files/
bat nvim
mv program_files/ programs
lst
lsd --tree
cd /opt
cd ~/dotfiles/nvim/
cd plugins
lt
lt --depth=3
git clone https://github.com/eth-p/bat-extras.git
cd bat-extras/
bat build.sh
./build.sh
./build.sh --install
sudo ./build.sh --install
batman exa
batman git-log
man git-rebase | bat
bat install.sh
bat backup.sh
bat zsh/.zshrc
rg unix
batgrep unix
batgrep lightline
batgrep augroup
git show | bat
git show | bat -l rs
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
bat --list-themes | fzf --preview="bat --theme={} --color=always /path/to/file"
bat --list-themes | fzf --preview="bat --theme={} --color=always ginit.vim"
apt search broot | batgrep broot
apt search broot
wget https://github.com/Canop/broot/releases/download/v0.10.2/broot
sudo ./broot --install
sudo ./broot
ln -sv ~/programs/broot /usr/bin
sudo ln -sv ~/programs/broot /usr/bin
sudo broot
rm win32yank
sudo rm win32yank
mlocate broot
rm broot
sudo rm broot
ll | fzf
sudo -i
man sudo
man chmode
man chmod
chmod +x broot
chmod +x broot.bin
chmod a+x broot
./broot
bat ~/.zshrc
cd ~/.config/broot/launcher/bash
cd ~/programs
cd /usr/local
sudo ln -sv ~/programs/broot /usr/local/bin/
nm ~/programs//broot /usr/local/bin/broot
mv ~/programs//broot /usr/local/bin/broot
sudo mv ~/programs//broot /usr/local/bin/broot
broot
vim conf.toml
showkey -a
vim ~/.config/broot/conf.toml
br
exa --help
ls
exa -x
exa -lx
exa --group-directories-first
exa --group-directories-first -l
exa -lhS
exa -lh
exa -lhi
exa -lbF --git
exa -lbF
exa -lbhHigUmuSa@ --time-style=long-iso --git --color-scale
vim ~/dotfiles/nvim/init.vim
vim ~/.zsh_history
exa *sh
exa -l *sh
apt search exa
apt search exa | rg exa
apt search exa | rg 'exa && ls'
apt search exa | rg 'exa | ls'
apt search exa | rg 'exa & ls'
apt search exa | rg 'exa*ls'
apt search exa | rg 'exa.*ls'
exa -v
exa --icons
exa -l --icons
man exa
exa --git
exa -l --icons --git
exa --long --git
exa
exa -l
exa -l --git
exa -l --git --head
exa -l --git -h
exa -lh --git
vim ~/dotfiles/nvim/plugins.vim
sudo apt update && sudo apt upgrade
apt search bfs | rg bfs
apt search bfs | batgrep bfs
cd /usr/local/bin
apt search bfs | bat 'bfs'
apt search bfs | rg 'bfs'
apt search bfs | batgrep 'bfs'
apt search bfs
sudo apt install bfs
cd ~/dotfiles/
dpkg-query -s
bfs ~ -nohidden -type d -printf '~/%P\n'
bfs --help
ll -h
ll -a
ll -A
git diff
git add -A
git commit
vim .gitignore
git status
git log
git push
vim
cd nvim
lsd
lsd --help
man bfs
bfs
source ~/.zshrc
git status -s
git commit -a --amend
git push -f
git shoq
git show
apt search antigen
sudo apt install zsh-antigen
vim ~/dotfiles/install.sh
mlocate aintigen
mlocate zsh
cd /usr/share
bat antigen.zsh
ll
bat README.Debian
vim README.Debian
bat README.mkd.gz
cd
vim ~/.zshrc
cp -fv ~/.zsh_history ~/dotfiles/zsh/.zsh_history
